@page "/reports/receipts/{id:int}"
@inject AdminService adminService
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin, Finance")]

<PageTitle>Tax Receipts</PageTitle>

<h1>Tax Receipts for Account No: @Id</h1>
<hr />

@if (errorMessage != null && errorMessage != "")
{
<div class="alert alert-danger col-md-4" role="alert">
    @errorMessage
</div>    
}

@foreach(var receipt in taxReceipts)
{
    <div class="d-flex flex-column col-md-8 border border-1 p-4">
        <div class="align-self-center"><h2>NFP Charity Organization</h2></div>
        <div class="align-self-center"><span>1234 Main Street, Vancouver</span></div>
        <div class="align-self-end"><span>Receipt #: @receipt.ReceiptNumber</span></div>
        <div class="align-self-start"><span>Donated by: @receipt.DonorName</span></div>
        <div class="align-self-start"><span>Address: @receipt.Address</span></div>
        <br/>
        <div class="align-self-start"><span>Date of donation: @receipt.DonationDate?.ToString("dddd, dd MMMM yyyy")</span></div>
        <div class="align-self-start"><span>Donated via: @receipt.TransactionType</span></div>
        <div class="align-self-start"><span>Donation amount: @string.Format("{0:C}", receipt.Amount)</span></div>
        <br/><br/>
        <div class="align-self-end"><span>Date: @receipt.IssueDate?.ToString("dddd, dd MMMM yyyy")</span></div>
    </div>

    <hr/>
}

@code
{
    [Parameter]
    public int Id { get; set; }
    private List<TaxReceipt> taxReceipts = new List<TaxReceipt>();

    private string? errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        try {
            taxReceipts = await adminService.GetTaxReceiptsByDonorAsync(Id);
        } catch (Exception ex) {
            errorMessage = ex.Message;
        }
    }
}