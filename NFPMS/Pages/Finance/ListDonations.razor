@page "/donations"
@inject FinanceService financeService
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@attribute [Authorize(Roles = "Admin, Finance")]

<PageTitle>Donations</PageTitle>
<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <MudText Color="Color.Inherit" Typo="Typo.h5">Donations</MudText>
    <MudDataGrid T="Donation" Items="@donations" Dense=true Hover=true Bordered=true Striped=true 
        ColumnResizeMode="@ResizeMode.Column">
        <ToolBarContent>
            <MudButton OnClick="@AddItem" Color="@Color.Success" Class="add-item-btn mr-5">Add Donation</MudButton>
            <MudSpacer />
            @* <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField> *@
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.TransactionId" Title="Transaction ID" />
            <PropertyColumn Property="x => x.Contact!.FirstName + ' ' + x.Contact!.LastName" Title="Donor" />
            <PropertyColumn Property="x => x.PaymentMethod!.Name" Title="Donated Via" />
            <PropertyColumn Property="x => x.TransactionType!.Name" Title="Category" />
            <PropertyColumn Property="x => x.Amount" Title="Amount" Format="c" Culture="@(new System.Globalization.CultureInfo("en-US"))"/>
            <PropertyColumn Property="x => x.Date" Title="Date" Format="dddd, dd MMMM yyyy"/>
            <PropertyColumn Property="x => x.Notes" Title="Notes" />  
            <TemplateColumn>
                <CellTemplate>
                    <MudStack Row>
                        <MudIconButton Size="@Size.Small" Color="@Color.Info" Title="Edit" Icon="@Icons.Material.Outlined.Edit" OnClick="@((e)=> HandleEdit(context.Item))"/>
                        <MudIconButton Size="@Size.Small" Color="@Color.Error" Title="delete" Icon="@Icons.Material.Outlined.Delete" OnClick="@((e) => HandleDelete(context.Item))"/>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Donation"/>
        </PagerContent>
    </MudDataGrid>
</MudContainer>

@code {
    private List<Donation>? donations = new List<Donation>();
    @* private string? _searchString = ""; *@

    protected async override Task OnInitializedAsync()
    {
        donations = await financeService.GetDonationsAsync();
    }

    async Task AddItem() 
    {
        var parameters = new DialogParameters<DonationDialog>();
        parameters.Add("Donation", new Donation());
        parameters.Add("Mode", "add");

        var dialog = await DialogService.ShowAsync<DonationDialog>("Add Donation", parameters);
        var result = await dialog.Result;

        if (!result.Canceled) {
            donations!.Add((Donation) result.Data);
            Snackbar.Add("New donation added successfully", Severity.Success);
        }
    }

    async Task HandleEdit(Donation donation)
    {
        var parameters = new DialogParameters<DonationDialog>();
        var copy = new Donation(donation);
        parameters.Add("Donation", copy);
        parameters.Add("Mode", "edit");

        var dialog = await DialogService.ShowAsync<DonationDialog>("Edit Donation", parameters);
        var result = await dialog.Result;

        if (!result.Canceled) {
            donation = copy;
            Snackbar.Add("Donation updated successfully", Severity.Success);
        }
    }

    async Task HandleDelete(Donation donation)
    {
        var parameters = new DialogParameters<DonationDialog>();
        parameters.Add("Donation", donation);
        parameters.Add("Mode", "del");

        var dialog = await DialogService.ShowAsync<DonationDialog>("Delete Donation", parameters);
        var result = await dialog.Result;

        if (!result.Canceled) {
            donations!.Remove(donation);
            Snackbar.Add("Donation deleted successfully", Severity.Success);
        }
    }
}